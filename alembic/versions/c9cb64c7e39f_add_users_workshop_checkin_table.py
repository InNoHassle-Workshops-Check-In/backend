"""add users, workshop, checkin table

Revision ID: c9cb64c7e39f
Revises: 
Create Date: 2025-06-05 14:19:03.762686

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel as sm
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'c9cb64c7e39f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

user_role_enum = postgresql.ENUM('admin', 'user', name='userrole', create_type=False)

def upgrade() -> None:
    """Upgrade schema."""
    user_role_enum.create(op.get_bind(), checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sm.String(), nullable=False),
    sa.Column('email', sm.String(), nullable=False),
    sa.Column('innohassle_id', sm.String(), nullable=False),
    sa.Column('hashed_password', sm.String(), nullable=False),
    sa.Column('role', user_role_enum, nullable=False),
    # sa.Column('role', sa.Enum('admin', 'user', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('workshop',
    sa.Column('name', sm.String(length=255), nullable=False),
    sa.Column('alias', sm.String(length=255), nullable=False),
    sa.Column('dtstart', sa.DateTime(), nullable=False),
    sa.Column('dtend', sa.DateTime(), nullable=False),
    sa.Column('place', sm.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('remain_places', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sm.String(), nullable=False),
    sa.Column('description', sm.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('alias')
    )
    op.create_index(op.f('ix_workshop_id'), 'workshop', ['id'], unique=False)
    op.create_index(op.f('ix_workshop_name'), 'workshop', ['name'], unique=False)
    op.create_table('workshopcheckin',
    sa.Column('user_id', sm.String(), nullable=False),
    sa.Column('workshop_id', sm.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workshop_id'], ['workshop.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'workshop_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workshopcheckin')
    op.drop_index(op.f('ix_workshop_name'), table_name='workshop')
    op.drop_index(op.f('ix_workshop_id'), table_name='workshop')
    op.drop_table('workshop')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # op.execute("DROP TYPE userrole") 
    # ### end Alembic commands ###
